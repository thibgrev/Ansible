#- name: Definition des variables si "redhat" est trouve dans le nom de la VM
#set_fact:
#vmware_folder: Red Hat
#vmware_resource_pool: Red Hat
#vmware_TemplateOS: RHEL9
#when: nomVM.find("redhat") != -1

#- name: Definition des variables si "windows" est trouve dans le nom de la VM
#set_fact:
#vmware_folder: Microsoft
#vmware_resource_pool: Microsoft
#vmware_TemplateOS: W2022
#when: nomVM.find("windows") != -1

- name: Deploiement de la VM "{{ nomVM }}" - Machine Red Hat detectee
  vmware_guest:
    hostname: "{{ vmware_hostname }}"
    username: "{{ vmware_username }}"
    password: "{{ vmware_password }}"
    validate_certs: False
    name: "{{ nomVM }}"
    template: RHEL9
    datacenter: "{{ vmware_datacenter }}"
    folder: Red Hat
    state: poweredon
    wait_for_ip_address: yes
    resource_pool: Red Hat
    disk:
      - size_gb: "{{ tailleDisk }}"
        type: thin
        datastore: vsanDatastore
    hardware:
      memory_mb: "{{ nombreRAM }}"
      num_cpus: "{{ nombreVCPU }}"
      hotadd_memory: true
      hotadd_cpu: true
  when: nomVM.find("redhat") != -1

- name: Deploiement de la VM "{{ nomVM }}" - Machine Windows detectee
  vmware_guest:
    validate_certs: False
    username: "{{ vmware_username }}"
    password: "{{ vmware_password }}"
    hostname: "{{ vmware_hostname }}"
    datacenter: "{{ vmware_datacenter }}"
    name: "{{ nomVM }}"
    template: W2022
    resource_pool: Microsoft
    state: poweredon
    wait_for_ip_address: yes
    folder: Microsoft
    disk:
      - size_gb: "{{ tailleDisk }}"
        type: thin
        datastore: vsanDatastore
    customization:
      domain: "{{ domaine_nom }}"
      joindomain: "{{ domaine_nom }}"
      domainadmin: "{{ domaine_administrateur }}"
      domainadminpassword: "{{ domaine_administrateur_password }}"
      password: "{{ domaine_administrateur_password }}"
      timezone: 105
    hardware:
      memory_mb: "{{ nombreRAM }}"
      num_cpus: "{{ nombreVCPU }}"
      hotadd_memory: true
      hotadd_cpu: true
    networks:
    - name: VM Network
      connected: yes
      start_connected: true
      type: dhcp
  when: nomVM.find("windows") != -1
